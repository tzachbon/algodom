{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport useBubbleSort from './bubble-sort';\nimport useMergeSort from './merge-sort';\nimport useQuickSort from './quick-sort';\nimport useHeapSort from './heap-sort';\nvar sortFunctions = {\n  'bubble-sort': useBubbleSort,\n  'merge-sort': useMergeSort,\n  'quick-sort': useQuickSort,\n  'heap-sort': useHeapSort\n};\nvar sortsArray = Object.keys(sortFunctions);\n\nvar testArray = function testArray(testFn) {\n  var length, array, sorted, tested;\n  return _regeneratorRuntime.async(function testArray$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          length = 1000;\n          array = new Array(length).fill(null).map(function () {\n            return {\n              value: Math.floor(Math.random() * length) + 1\n            };\n          });\n          sorted = array.slice().sort(function (_ref, _ref2) {\n            var a = _ref.value;\n            var b = _ref2.value;\n            return a - b;\n          });\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(testFn(array));\n\n        case 5:\n          tested = _context.sent;\n          console.log('sorted', sorted.length);\n          console.log('tested', tested.length);\n          console.log(sorted, tested);\n          return _context.abrupt(\"return\", JSON.stringify(sorted) === JSON.stringify(tested));\n\n        case 10:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport { useBubbleSort, useQuickSort, useMergeSort, useHeapSort, sortsArray, testArray, sortFunctions };\nexport default function useSort(state, delayFn) {\n  return _regeneratorRuntime.async(function useSort$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          state.sorting = true;\n          _context6.t0 = state.currentAlgorithm;\n          _context6.next = _context6.t0 === 'merge-sort' ? 4 : _context6.t0 === 'bubble-sort' ? 7 : _context6.t0 === 'quick-sort' ? 10 : _context6.t0 === 'heap-sort' ? 13 : 16;\n          break;\n\n        case 4:\n          _context6.next = 6;\n          return _regeneratorRuntime.awrap(useMergeSort(state.elements, function _callee(i, j, newArray) {\n            var elements, k, _iterator, _step, element;\n\n            return _regeneratorRuntime.async(function _callee$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    if (state.sorting) {\n                      _context2.next = 2;\n                      break;\n                    }\n\n                    return _context2.abrupt(\"return\");\n\n                  case 2:\n                    elements = state.elements.slice(i, j + 1);\n                    k = 0;\n                    _iterator = _createForOfIteratorHelper(elements);\n                    _context2.prev = 5;\n\n                    _iterator.s();\n\n                  case 7:\n                    if ((_step = _iterator.n()).done) {\n                      _context2.next = 18;\n                      break;\n                    }\n\n                    element = _step.value;\n                    element.current = true;\n                    _context2.next = 12;\n                    return _regeneratorRuntime.awrap(delayFn());\n\n                  case 12:\n                    element.value = newArray[k++].value;\n                    _context2.next = 15;\n                    return _regeneratorRuntime.awrap(delayFn(false));\n\n                  case 15:\n                    element.current = false;\n\n                  case 16:\n                    _context2.next = 7;\n                    break;\n\n                  case 18:\n                    _context2.next = 23;\n                    break;\n\n                  case 20:\n                    _context2.prev = 20;\n                    _context2.t0 = _context2[\"catch\"](5);\n\n                    _iterator.e(_context2.t0);\n\n                  case 23:\n                    _context2.prev = 23;\n\n                    _iterator.f();\n\n                    return _context2.finish(23);\n\n                  case 26:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, null, null, [[5, 20, 23, 26]], Promise);\n          }));\n\n        case 6:\n          return _context6.abrupt(\"break\", 17);\n\n        case 7:\n          _context6.next = 9;\n          return _regeneratorRuntime.awrap(useBubbleSort(state.elements, function _callee2(i, j) {\n            var array, temp;\n            return _regeneratorRuntime.async(function _callee2$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    if (!(!state.sorting || i === j)) {\n                      _context3.next = 2;\n                      break;\n                    }\n\n                    return _context3.abrupt(\"return\");\n\n                  case 2:\n                    array = state.elements;\n                    temp = array[i].value;\n                    array[i].current = true;\n                    array[j].current = true;\n                    _context3.next = 8;\n                    return _regeneratorRuntime.awrap(delayFn());\n\n                  case 8:\n                    array[i].value = array[j].value;\n                    array[j].value = temp;\n                    array[i].current = false;\n                    array[j].current = false;\n\n                  case 12:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }));\n\n        case 9:\n          return _context6.abrupt(\"break\", 17);\n\n        case 10:\n          _context6.next = 12;\n          return _regeneratorRuntime.awrap(useQuickSort(state.elements, function _callee3(i, j) {\n            var array, temp;\n            return _regeneratorRuntime.async(function _callee3$(_context4) {\n              while (1) {\n                switch (_context4.prev = _context4.next) {\n                  case 0:\n                    if (!(!state.sorting || i === j)) {\n                      _context4.next = 2;\n                      break;\n                    }\n\n                    return _context4.abrupt(\"return\");\n\n                  case 2:\n                    array = state.elements;\n                    temp = array[i].value;\n                    array[i].current = true;\n                    array[j].current = true;\n                    _context4.next = 8;\n                    return _regeneratorRuntime.awrap(delayFn());\n\n                  case 8:\n                    array[i].value = array[j].value;\n                    array[j].value = temp;\n                    array[i].current = false;\n                    array[j].current = false;\n\n                  case 12:\n                  case \"end\":\n                    return _context4.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }));\n\n        case 12:\n          return _context6.abrupt(\"break\", 17);\n\n        case 13:\n          _context6.next = 15;\n          return _regeneratorRuntime.awrap(useHeapSort(state.elements, function _callee4(i, j) {\n            var array, temp;\n            return _regeneratorRuntime.async(function _callee4$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    if (!(!state.sorting || i === j)) {\n                      _context5.next = 2;\n                      break;\n                    }\n\n                    return _context5.abrupt(\"return\");\n\n                  case 2:\n                    array = state.elements;\n                    temp = array[i].value;\n                    array[i].current = true;\n                    array[j].current = true;\n                    _context5.next = 8;\n                    return _regeneratorRuntime.awrap(delayFn());\n\n                  case 8:\n                    array[i].value = array[j].value;\n                    array[j].value = temp;\n                    array[i].current = false;\n                    array[j].current = false;\n\n                  case 12:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }));\n\n        case 15:\n          return _context6.abrupt(\"break\", 17);\n\n        case 16:\n          return _context6.abrupt(\"break\", 17);\n\n        case 17:\n          state.sorting = false;\n\n        case 18:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":null,"metadata":{},"sourceType":"module"}