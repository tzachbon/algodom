{"ast":null,"code":"var __jsx = React.createElement;\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { toJS } from 'mobx';\nimport { observer } from 'mobx-react';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport ClassNames from '../../utils/classnames';\nimport { sortFunctions } from '../../utils/sort/sort';\nimport { startCase } from 'lodash';\nimport './style.scss';\n\nconst TestSortsDialog = ({\n  className,\n  open,\n  array,\n  updateOpen\n}) => {\n  const {\n    0: sortEntries,\n    1: setSortEntries\n  } = useState([]);\n  const cloneArray = useMemo(() => toJS(array), [array]);\n\n  const handleClose = () => updateOpen(false);\n\n  useEffect(() => {\n    open && calculateSpeed();\n  }, [open]);\n\n  const calculateSpeed = async () => {\n    const entries = [];\n\n    for (const [name, fn] of Object.entries(sortFunctions)) {\n      const now = performance.now();\n      await fn(cloneArray, () => Promise.resolve());\n      entries.push([name, performance.now() - now]);\n    }\n\n    setSortEntries(entries);\n  };\n\n  return __jsx(\"div\", {\n    className: ClassNames(className, 'TestSortsDialog')\n  }, __jsx(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-title\",\n    \"aria-describedby\": \"alert-dialog-description\"\n  }, __jsx(DialogTitle, {\n    id: \"alert-dialog-title\"\n  }, \"Test Sorting Speed\"), __jsx(DialogContent, {\n    className: \"TestSortsDialog__DialogContent\"\n  }, sortEntries.map(([name, value], i) => __jsx(\"div\", {\n    key: `${name}__${i}__test-sort-dialog`\n  }, __jsx(\"span\", {\n    className: \"name\"\n  }, startCase(name)), __jsx(\"span\", {\n    className: \"value\"\n  }, value.toFixed(3))))), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Close\"), __jsx(Button, {\n    onClick: calculateSpeed,\n    color: \"primary\",\n    variant: \"outlined\",\n    autoFocus: true\n  }, \"Run test\"))));\n};\n\nexport default observer(TestSortsDialog);","map":null,"metadata":{},"sourceType":"module"}